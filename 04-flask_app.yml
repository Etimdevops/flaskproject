---
- hosts: n1
  become: yes
  vars:
    flask_app_directory: /opt/flask_app
    flask_app_service: flask_app
    repository_url: https://github.com/Etimdevops/flaskproject.git
    python_version: python3.11  # Updated to specific Python version

  tasks:
    - name: Ensure necessary packages are installed
      ansible.builtin.yum:
        name:
          - git
          - "{{ python_version }}"
          - "{{ python_version }}-pip"
        state: present

    - name: Install python3-venv from source if necessary
      ansible.builtin.yum:
        name: python3.11-devel  # Ensure development headers are installed
        state: present

    - name: Build and install python3-venv from source
      block:
        - name: Download Python 3.11 source
          ansible.builtin.get_url:
            url: https://www.python.org/ftp/python/3.11.5/Python-3.11.5.tgz
            dest: /tmp/Python-3.11.5.tgz

        - name: Extract Python source
          ansible.builtin.unarchive:
            src: /tmp/Python-3.11.5.tgz
            dest: /tmp/
            remote_src: yes

        - name: Build and install python3-venv from source
          ansible.builtin.command:
            cmd: |
              cd /tmp/Python-3.11.5
              ./configure
              make
              make install
            creates: /usr/local/bin/python3.11

        - name: Clean up source files
          ansible.builtin.file:
            path: /tmp/Python-3.11.5
            state: absent

    - name: Clone the Flask application repository
      ansible.builtin.git:
        repo: "{{ repository_url }}"
        dest: "{{ flask_app_directory }}"
        version: main

    - name: Set up the Python virtual environment
      ansible.builtin.command:
        cmd: "{{ python_version }} -m venv venv"
        chdir: "{{ flask_app_directory }}"

    - name: Install the required Python packages
      ansible.builtin.command:
        cmd: "venv/bin/pip install -r requirements.txt"
        chdir: "{{ flask_app_directory }}"

    - name: Create a systemd service for the Flask application
      ansible.builtin.template:
        src: flask_app.service.j2
        dest: /etc/systemd/system/{{ flask_app_service }}.service

    - name: Reload systemd to apply the new service
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Start and enable the Flask application service
      ansible.builtin.systemd:
        name: "{{ flask_app_service }}"
        state: started
        enabled: yes

    - name: Open the firewall to allow access to the Flask app
      ansible.builtin.firewalld:
        port: 5000/tcp
        permanent: yes
        state: enabled
        immediate: yes

    - name: Restart firewalld to apply changes
      ansible.builtin.systemd:
        name: firewalld
        state: restarted
